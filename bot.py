import os
import random
import time
import threading
import re
import telebot
import pymorphy2

# =========================
# üîë –°–ï–ö–†–ï–¢–´ –ò –ù–ê–°–¢–†–û–ô–ö–ò
# =========================
TOKEN = os.getenv("TOKEN", "8435949737:AAFOoiJe1pbduW0fQK3S92q04XbKFqCXWD8")
CHANNEL_ID = os.getenv("CHANNEL_ID", "@zalesskayarepublic")

if not TOKEN or not CHANNEL_ID or "YOUR_TELEGRAM_BOT_TOKEN" in TOKEN:
    raise RuntimeError("–£–∫–∞–∂–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TOKEN –∏ CHANNEL_ID!")

bot = telebot.TeleBot(TOKEN, parse_mode=None)
morph = pymorphy2.MorphAnalyzer()

# =========================
# üìç –õ–û–ö–ê–¶–ò–ò
# =========================
zr_regions = {
    "–û—Ä–ª–æ–≤—Å–∫–∞—è": [
        "–û—Ä—ë–ª","–õ–∏–≤–Ω—ã","–ú—Ü–µ–Ω—Å–∫","–ë–æ–ª—Ö–æ–≤","–ö—Ä–æ–º—ã","–•–æ—Ç—ã–Ω–µ—Ü","–ù–æ–≤–æ—Å–∏–ª—å","–ü–æ–∫—Ä–æ–≤—Å–∫–æ–µ","–î–º–∏—Ç—Ä–æ–≤—Å–∫",
        "–ö–æ–ª–ø–Ω–∞","–¢—Ä–æ—Å–Ω–∞","–ù–∞—Ä—ã—à–∫–∏–Ω–æ","–ó–∞–ª–µ–≥–æ—â—å","–í–µ—Ä—Ö–æ–≤—å–µ","–ú–∞–ª–æ–∞—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫","–ì–ª–∞–∑—É–Ω–æ–≤–∫–∞","–®–∞–±–ª—ã–∫–∏–Ω–æ",
        "–°–æ—Å–∫–æ–≤–æ","–£—Ä–∏—Ü–∫–æ–µ","–î–æ–ª–≥–æ–µ","–ü–ª–µ—â–µ–µ–≤–æ","–°—Ç–∞–Ω–æ–≤–æ–π –ö–æ–ª–æ–¥–µ–∑—å","–•–æ–º—É—Ç–æ–≤–æ","–ö—Ä–∞—Å–Ω–∞—è –ó–∞—Ä—è",
        "–ù–∞—Ä—ã—à–∫–∏–Ω—Å–∫–∏–π –æ–∫—Ä—É–≥","–ö—Ä–æ–º—Å–∫–æ–π —Ä–∞–π–æ–Ω","–ü–æ–∫—Ä–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω","–ó–Ω–∞–º–µ–Ω—Å–∫–æ–µ","–°–æ—Å–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω",
        "–ú—Ü–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω","–õ–∏–≤–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ],
    "–ö—É—Ä—Å–∫–∞—è": [
        "–ö—É—Ä—Å–∫","–õ—å–≥–æ–≤","–†—ã–ª—å—Å–∫","–û–±–æ—è–Ω—å","–ñ–µ–ª–µ–∑–Ω–æ–≥–æ—Ä—Å–∫","–§–∞—Ç–µ–∂","–ö–∞—Å—Ç–æ—Ä–Ω–æ–µ","–ì–ª—É—à–∫–æ–≤–æ","–ö–æ—Ä–µ–Ω–µ–≤–æ",
        "–ö—É—Ä—á–∞—Ç–æ–≤","–ú–∞–Ω—Ç—É—Ä–æ–≤–æ","–ú–µ–¥–≤–µ–Ω–∫–∞","–°—É–¥–∂–∞","–ó–æ–ª–æ—Ç—É—Ö–∏–Ω–æ","–©–∏–≥—Ä—ã","–ü–æ–Ω—ã—Ä–∏","–•–æ–º—É—Ç–æ–≤–∫–∞","–°–æ–ª–Ω—Ü–µ–≤–æ",
        "–ü—Ä–∏—Å—Ç–µ–Ω—å","–ë–æ–ª—å—à–æ–µ –°–æ–ª–¥–∞—Ç—Å–∫–æ–µ","–¢–∏–º","–ì–æ—Ä—à–µ—á–Ω–æ–µ","–°–æ–≤–µ—Ç—Å–∫–∏–π","–ë–µ–ª–æ–≤—Å–∫–∏–π","–ö–æ–Ω—ã—à–µ–≤–∫–∞",
        "–ß–µ—Ä–µ–º–∏—Å–∏–Ω–æ–≤–æ","–û–ª—å–≥–æ–≤–∫–∞","–ú–∞—Ä—å–∏–Ω–æ","–ö–æ—á–∫–∞","–°–≤–æ–±–æ–¥–∞","–ë–µ—Å–µ–¥–∏–Ω–æ"
    ],
    "–ë—Ä—è–Ω—Å–∫–∞—è": [
        "–ë—Ä—è–Ω—Å–∫","–°–µ–≤—Å–∫","–ö–ª–∏–Ω—Ü—ã","–°—Ç–∞—Ä–æ–¥—É–±","–£–Ω–µ—á–∞","–î—è—Ç—å–∫–æ–≤–æ","–ñ—É–∫–æ–≤–∫–∞","–ù–æ–≤–æ–∑—ã–±–∫–æ–≤","–¢—Ä—É–±—á–µ–≤—Å–∫",
        "–°—É–∑–µ–º–∫–∞","–ü–æ—á–µ–ø","–ù–∞–≤–ª—è","–ö–æ–º–∞—Ä–∏—á–∏","–ö–∞—Ä–∞—á–µ–≤","–°–µ–ª—å—Ü–æ","–§–æ–∫–∏–Ω–æ","–ö–ª–µ—Ç–Ω—è","–ú–≥–ª–∏–Ω",
        "–ü–æ–≥–∞—Ä","–ó–ª—ã–Ω–∫–∞","–ö—Ä–∞—Å–Ω–∞—è –ì–æ—Ä–∞","–°—É—Ä–∞–∂","–ì–æ—Ä–¥–µ–µ–≤–∫–∞","–í—ã–≥–æ–Ω–∏—á–∏","–î—É–±—Ä–æ–≤–∫–∞",
        "–†–æ–≥–Ω–µ–¥–∏–Ω–æ","–ë—Ä–∞—Å–æ–≤–æ","–ñ–∏—Ä—è—Ç–∏–Ω–æ","–õ–æ–∫–æ—Ç—å","–ë–µ–ª–∞—è –ë–µ—Ä—ë–∑–∫–∞","–°—Ç–∞—Ä–æ–µ –°–µ–ª–æ","–ö–ª–∏–º–æ–≤–æ"
    ]
}

enemy_regions = {
    "–ë–µ–ª–≥–æ—Ä–æ–¥—Å–∫–∞—è": ["–ë–µ–ª–≥–æ—Ä–æ–¥","–®–µ–±–µ–∫–∏–Ω–æ","–í–∞–ª—É–π–∫–∏","–ì—É–±–∫–∏–Ω","–°—Ç–∞—Ä—ã–π –û—Å–∫–æ–ª","–ì—Ä–∞–π–≤–æ—Ä–æ–Ω","–ê–ª–µ–∫—Å–µ–µ–≤–∫–∞","–†–∞–∫–∏—Ç–Ω–æ–µ","–ü—Ä–æ—Ö–æ—Ä–æ–≤–∫–∞","–ù–æ–≤—ã–π –û—Å–∫–æ–ª"],
    "–°–º–æ–ª–µ–Ω—Å–∫–∞—è":   ["–°–º–æ–ª–µ–Ω—Å–∫","–Ø—Ä—Ü–µ–≤–æ","–†–æ—Å–ª–∞–≤–ª—å","–°–∞—Ñ–æ–Ω–æ–≤–æ","–î–µ—Å–Ω–æ–≥–æ—Ä—Å–∫","–î–æ—Ä–æ–≥–æ–±—É–∂","–í—è–∑—å–º–∞","–†—É–¥–Ω—è"],
    "–ö–∞–ª—É–∂—Å–∫–∞—è":    ["–ö–∞–ª—É–≥–∞","–û–±–Ω–∏–Ω—Å–∫","–ú–∞–ª–æ—è—Ä–æ—Å–ª–∞–≤–µ—Ü","–ë–∞–ª–∞–±–∞–Ω–æ–≤–æ","–¢–∞—Ä—É—Å–∞","–ö–æ–∑–µ–ª—å—Å–∫","–õ—é–¥–∏–Ω–æ–≤–æ","–ú–æ—Å–∞–ª—å—Å–∫"],
    "–¢—É–ª—å—Å–∫–∞—è":     ["–¢—É–ª–∞","–ù–æ–≤–æ–º–æ—Å–∫–æ–≤—Å–∫","–ï—Ñ—Ä–µ–º–æ–≤","–£–∑–ª–æ–≤–∞—è","–°—É–≤–æ—Ä–æ–≤","–©—ë–∫–∏–Ω–æ","–î–æ–Ω—Å–∫–æ–π","–ë–æ–≥–æ—Ä–æ–¥–∏—Ü–∫"],
    "–õ–∏–ø–µ—Ü–∫–∞—è":     ["–õ–∏–ø–µ—Ü–∫","–ï–ª–µ—Ü","–ì—Ä—è–∑–∏","–î–∞–Ω–∫–æ–≤","–ó–∞–¥–æ–Ω—Å–∫","–ß–∞–ø–ª—ã–≥–∏–Ω","–£—Å–º–∞–Ω—å"],
    "–í–æ—Ä–æ–Ω–µ–∂—Å–∫–∞—è":  ["–í–æ—Ä–æ–Ω–µ–∂","–°–µ–º–∏–ª—É–∫–∏","–û—Å—Ç—Ä–æ–≥–æ–∂—Å–∫","–õ–∏—Å–∫–∏","–†–æ—Å—Å–æ—à—å","–ö–∞–ª–∞—á","–ë—É—Ç—É—Ä–ª–∏–Ω–æ–≤–∫–∞","–ü–∞–≤–ª–æ–≤—Å–∫"],
    "–¢–∞–º–±–æ–≤—Å–∫–∞—è":   ["–¢–∞–º–±–æ–≤","–ú–∏—á—É—Ä–∏–Ω—Å–∫","–ö–æ—Ç–æ–≤—Å–∫","–ú–æ—Ä—à–∞–Ω—Å–∫","–†–∞—Å—Å–∫–∞–∑–æ–≤–æ","–£–≤–∞—Ä–æ–≤–æ","–ñ–µ—Ä–¥–µ–≤–∫–∞"],
    "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è":   ["–ú–æ—Å–∫–≤–∞","–ü–æ–¥–º–æ—Å–∫–æ–≤—å–µ","–•–∏–º–∫–∏","–ú—ã—Ç–∏—â–∏","–ë–∞–ª–∞—à–∏—Ö–∞","–û–¥–∏–Ω—Ü–æ–≤–æ","–©—ë–ª–∫–æ–≤–æ","–ö–æ–ª–æ–º–Ω–∞","–û—Ä–µ—Ö–æ–≤–æ-–ó—É–µ–≤–æ","–ö–ª–∏–Ω","–°–µ—Ä–≥–∏–µ–≤ –ü–æ—Å–∞–¥","–î–æ–º–æ–¥–µ–¥–æ–≤–æ","–ñ—É–∫–æ–≤—Å–∫–∏–π"],
    "–†—è–∑–∞–Ω—Å–∫–∞—è":    ["–†—è–∑–∞–Ω—å","–ö–∞—Å–∏–º–æ–≤","–°–∫–æ–ø–∏–Ω","–°–∞—Å–æ–≤–æ","–†—è–∂—Å–∫","–ö–æ—Ä–∞–±–ª–∏–Ω–æ"],
    "–¢–≤–µ—Ä—Å–∫–∞—è":     ["–¢–≤–µ—Ä—å","–†–∂–µ–≤","–í—ã—à–Ω–∏–π –í–æ–ª–æ—á—ë–∫","–¢–æ—Ä–∂–æ–∫","–ö–∏–º—Ä—ã","–ë–µ–∂–µ—Ü–∫"],
    "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è":  ["–Ø—Ä–æ—Å–ª–∞–≤–ª—å","–†—ã–±–∏–Ω—Å–∫","–ü–µ—Ä–µ—Å–ª–∞–≤–ª—å-–ó–∞–ª–µ—Å—Å–∫–∏–π","–£–≥–ª–∏—á","–¢—É—Ç–∞–µ–≤"],
    "–ü—Ä–æ—á–∏–µ":       ["–≥—Ä–∞–Ω–∏—Ü–∞ –†–§ (–ë–µ–ª–≥–æ—Ä–æ–¥)","–°–º–æ–ª–µ–Ω—Å–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ","–†—è–∑–∞–Ω—Å–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ","–ö–∞–ª—É–∂—Å–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ","–ü–æ–¥–º–æ—Å–∫–æ–≤–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"]
}

our_locations = [c for cities in zr_regions.values() for c in cities]
enemy_locations = [c for cities in enemy_regions.values() for c in cities]

# =========================
# üìú –°–¶–ï–ù–ê–†–ò–ò
# =========================
patterns = [
    "‚ùóÔ∏è‚ùóÔ∏è {loc1} ‚Äî —É–¥–∞—Ä—ã —Å —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ {enemy}",
    "‚ö° –ü—Ä–∏–ª—ë—Ç—ã –ø–æ {loc1}, –∏—Å—Ç–æ—á–Ω–∏–∫ –æ–≥–Ω—è ‚Äî {enemy}",
    "‚ùóÔ∏è‚ùóÔ∏è –ü—Ä–æ–ª—ë—Ç —Ä–∞–∫–µ—Ç –Ω–∞–¥ {loc1}, –∫—É—Ä—Å –Ω–∞ {loc2}",
    "‚ö° –ú–æ—â–Ω—ã–π –≤–∑—Ä—ã–≤ –≤ —Ä–∞–π–æ–Ω–µ {loc1}, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞—Ä–∞ ‚Äî {enemy}",
    "‚ùóÔ∏è‚ùóÔ∏è –ê—Ä—Ç–æ–±—Å—Ç—Ä–µ–ª –ø–æ {loc1} —Å –ø–æ–∑–∏—Ü–∏–π {enemy}",
    "‚ö° –†–∞–∫–µ—Ç–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª–∞ –∏–∑ {enemy}, —Ü–µ–ª—å ‚Äî {loc2}",
    "‚ùóÔ∏è‚ùóÔ∏è –ë–ü–õ–ê –∑–∞–º–µ—á–µ–Ω —É {loc1}, –∫—É—Ä—Å —Å {enemy}",
    "‚ö° –ú–∞—Å—Å–æ–≤—ã–π –∑–∞–ª–ø –∏–∑ {enemy} –ø–æ {loc1}",
    "‚ùóÔ∏è‚ùóÔ∏è –ü—Ä–æ—Ä—ã–≤ –ü–í–û, —É–¥–∞—Ä –ø–æ {loc1}, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {enemy}",
    "‚ö° –°–µ—Ä–∏—è –≤–∑—Ä—ã–≤–æ–≤ —É {loc1}, –ø—Ä–∏–ª—ë—Ç—ã —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã {enemy}"
]

# =========================
# ‚öôÔ∏è –†–ï–ñ–ò–ú–´ –°–ö–û–†–û–°–¢–ò
# =========================
modes = {
    "–∑–∞—Ç–∏—à—å–µ": (900, 1500),
    "—Ä–∞–∑–≤–µ–¥–∫–∞": (300, 600),
    "–æ–±—Å—Ç—Ä–µ–ª": (90, 180),
    "–º–∞—Å—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É–¥–∞—Ä": (20, 60),
    "—Ö–∞–æ—Å": (3, 20),
    "—Å–ø–∞–¥": (600, 1200)
}
current_mode = "–æ–±—Å—Ç—Ä–µ–ª"

# =========================
# üõ† –£–¢–ò–õ–ò–¢–´
# =========================
def decline(word: str, case: str) -> str:
    parsed = morph.parse(word.split()[0])[0]  # –±–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ (–≥–æ—Ä–æ–¥)
    form = parsed.inflect({case})
    return form.word if form else word

def format_text(text: str) -> str:
    if text and text[0].islower():
        text = text[0].upper() + text[1:]
    if not text.endswith("–†–∞–¥–∞—Ä –ó–∞–ª–µ—Å—Å–∫–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–∏"):
        text += "\n\nüì° –†–∞–¥–∞—Ä –ó–∞–ª–µ—Å—Å–∫–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–∏"
    return text

def pick_two_different(seq):
    a = random.choice(seq)
    b = random.choice(seq)
    while b == a:
        b = random.choice(seq)
    return a, b

def generate_message() -> str:
    pattern = random.choice(patterns)
    loc1, loc2 = pick_two_different(our_locations)
    enemy = random.choice(enemy_locations)

    # –∞–∫–∫—É—Ä–∞—Ç–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ
    if "–ø–æ {loc1}" in pattern:
        loc1 = decline(loc1, "dat")  # –¥–∞—Ç–µ–ª—å–Ω—ã–π
    if "—Å {enemy}" in pattern or "–∏–∑ {enemy}" in pattern:
        enemy = decline(enemy, "gen")  # —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π
    if "–≤ {loc1}" in pattern or "—É {loc1}" in pattern:
        loc1 = decline(loc1, "loc")  # –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π

    text = pattern.format(loc1=loc1, loc2=loc2, enemy=enemy)
    return format_text(text)

def switch_mode():
    global current_mode
    if random.random() < 0.2:
        current_mode = random.choice(list(modes.keys()))
        print(f"[MODE] ‚Üí {current_mode}")

def safe_send(text: str):
    delay = 1
    while True:
        try:
            bot.send_message(CHANNEL_ID, text)
            print("[SENT]", text)
            return
        except Exception as e:
            s = str(e)
            print("[ERROR]", s)
            m = re.search(r"Too Many Requests: retry after (\d+)", s)
            if m:
                wait = int(m.group(1)) + random.randint(1, 3)
            else:
                wait = delay
                delay = min(delay * 2, 60)
            time.sleep(wait)

def sender():
    global current_mode
    while True:
        msg = generate_message()
        safe_send(msg)
        low, high = modes[current_mode]
        time.sleep(random.randint(low, high))
        switch_mode()

# =========================
# üöÄ –ó–ê–ü–£–°–ö
# =========================
if __name__ == "__main__":
    threading.Thread(target=sender, daemon=True).start()
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    bot.polling(none_stop=True, interval=1, timeout=20)
